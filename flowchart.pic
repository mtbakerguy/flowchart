define terminal {
Terminal$1:
# $1 = text/name
box ht .3 wid 1 rad .15 "$1"
move
}

define action {
Action$1:
# $1 = text/name
box ht .3 wid 1 "$1"
move
}

define decision {
# $1 = text/name
Decision$1: [
right
T: line 1 invisible
line up right from T.w
line up left from T.e
line down right from T.w
line down left from T.e
] sprintf("$1?")
move
}

define inspection {
# $1 = text/name
Inspect$1:
circle "$1"
move
}

define io {
# $1 = text/name
IO$1:
[ line up right .5 then right 1 then down left .5 then left 1 ] "$1"
move
}

define delay {
# $1 = text/name
Delay$1:
[
 line left .5 then down .75 then right .5
 arc to last line
] "$1"
move
}

define document {
# $1 = text/name
Document$1:
[
 start = Here.x
 line up .8 then right 1 then down .8
 middle = start + Here.x
 arc rad .5 from last line.start to (middle/2,Here.y)
 arc rad .5 cw from last arc.end to last line.end
] "$1"
move
}

define db {
# $1 = text/name
DB$1:
[
 x = Here.x
 y = Here.y

 line up .8
 line up .8 from (x+.8,y)
 arc rad .7 from (x,y) to (x+.8,y)
 arc rad .8 from (x,y+.8) to (x+.8,y+.8)
 arc cw rad .9 from (x,y+.8) to (x+.8,y+.8)
] "$1"
move
}

define connect {
#$1 = from $2 = to $3 = text
line "$3" -> from $1 to $2
}

define raconnect {
#$1 = from $2 = to $3 = text
x = Here.x
y = Here.y
move to $2
line <- from $2 to ($2.x,$1.y)
line from ($2.x,$1.y) to $1 "$3"
move to (x,y)  # resets back to current position
}
